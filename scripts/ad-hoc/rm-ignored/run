#!/usr/bin/env ruby

require "fileutils"
require "json"

def submit_pr(dir)
  branch_name = "ignore-key"

  if system "git branch | grep -q %s" % branch_name
    return "skipping %s. Already has an %s branch." % [dir, branch_name]
  end

  cmd = "git reset --hard && git checkout master && git pull --rebase origin master && git checkout -b %s" % branch_name
  system(cmd)

  config = JSON.parse(File.read("config.json"))
  if !config.keys.include?("ignored")
    return "Skipping %s. Config has no ignored key." % dir
  end

  config.delete("ignored")
  File.open("config.json", "w") do |f|
    f.puts JSON.pretty_generate(config)
  end

  commit_message = <<-EOM
Delete ignored key from config.json

Since the exercise implementations are all in the exercises directory
we no longer need to ignore any non-exercise directories in the root
of the track.
  EOM
  context = "See https://github.com/exercism/meta/issues/3 for context."
  pull_request_message = commit_message + "\n" + context

  cmd = [
    "git add config.json",
    "git commit -m \"%s\"" % commit_message,
    "git push origin %s" % branch_name,
    "hub pull-request -m \"%s\"" % pull_request_message,
  ].join(" && ")
  if !system(cmd)
    return "%s failed. Investigate." % dir
  end
end

notices = []

pwd = Dir.pwd
Dir.glob("./tracks/*").each do |dir|
  Dir.chdir(dir)

  msg = submit_pr(dir)
  if msg
    notices << msg
  else
    sleep 4 # avoid hitting abuse limits against the GitHub API
  end

  Dir.chdir(pwd)
end

puts
puts notices
